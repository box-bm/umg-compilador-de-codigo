(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))u(n);new MutationObserver(n=>{for(const t of n)if(t.type==="childList")for(const o of t.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&u(o)}).observe(document,{childList:!0,subtree:!0});function s(n){const t={};return n.integrity&&(t.integrity=n.integrity),n.referrerPolicy&&(t.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?t.credentials="include":n.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function u(n){if(n.ep)return;n.ep=!0;const t=s(n);fetch(n.href,t)}})();async function ee(e){if(e&&e.length>0){const r=e[0];if(r.type!=="text/plain")throw alert("Usa archivos de texto plano. Ejemplo: .txt"),new Error("Invalid file type");return await r.text()}return""}function te(e){const r=e.split(`
`);return console.log("LectorLineas",r),r}const q=[{regex:/^let|^if|^else|^while|^const|^for|^do|^to|^step|^switch|^case|^default|^print$/,type:"keyword"},{regex:/^:$/,type:"punctuation"},{regex:/^true|^false$/,type:"boolean"},{regex:/^[0-9]+$/,type:"number"},{regex:/^"([^"\\]|\\.)*"$/,type:"string"},{regex:/^(?:\+\+|--|&&|\|\||[+\-*\/=<>!%])+$/,type:"operator"},{regex:/^[a-zA-Z_][a-zA-Z0-9_]*$/,type:"identifier"}],ne=e=>{if(e.trimEnd()==="")return[];if(e.trimStart().startsWith("# ")||e.trimStart()==="#")return[];const r=e.includes(" #")?e.split(" #")[0].trimEnd():e.trimEnd();if(r==="")return[];const s=[],u=/"([^"\\]|\\.)*"|[^\s]+/g;let n;for(;(n=u.exec(r))!==null;){const o=n[0];o.length>1&&o[0]==="!"&&o!=="!="?(s.push("!"),s.push(o.slice(1))):s.push(o)}const t=[];for(let o=0;o<s.length;o++){const i=s[o];let p=!1;for(let f=0;f<q.length;f++){const{regex:m,type:T}=q[f];if(m.test(i)){t.push({type:T,value:i,column:e.indexOf(i)}),p=!0;break}}p||t.push({type:"unknown",value:i,column:e.indexOf(i)})}return t},re=["&&","||"],oe=["<",">","<=",">=","==","!="];function d(e,r,s){return{type:"SyntaxError",message:e,column:r,line:s}}function J(e){return e.type==="number"||e.type==="string"||e.type==="boolean"||e.type==="identifier"}function _(e){return typeof e=="object"&&e!==null&&"type"in e&&e.type==="SyntaxError"}function O(e,r){var u,n,t,o,i,p,f,m,T,F,V,l,c,y,S,v,$,h,j,w,I;function s(a){return Array.isArray(a)?O(a,r):a}for(const a of e)if(a.type==="unknown")return d("No se puede usar un token desconocido",a.column,r);if(e.length===4&&e[0].type==="keyword"&&(e[0].value==="let"||e[0].value==="const")&&e[1].type==="identifier"&&e[2].type==="operator"&&e[2].value==="="&&e[3].type==="keyword")return d("No se puede asignar un keyword",e[3].column,r);if(e.length===4&&e[0].type==="keyword"&&(e[0].value==="let"||e[0].value==="const")&&e[1].type==="identifier"&&e[2].type==="operator"&&e[2].value==="="&&e[3].type==="unknown")return d("Token desconocido",e[3].column,r);if(e.length===2&&e[0].type==="operator"&&e[0].value==="!"&&J(e[1]))return{type:"logical_operation",operator:"!",left:e[1]};for(let a=e.length-1;a>=0;a--)if(e[a].type==="operator"&&re.includes(e[a].value)){if(((u=e[a-1])==null?void 0:u.type)==="keyword"||((n=e[a+1])==null?void 0:n.type)==="keyword")return d("No se puede usar un keyword como operando",e[a+1]&&e[a+1].type==="keyword"?e[a+1].column:e[a].column,r);if(((t=e[a-1])==null?void 0:t.type)==="unknown"||((o=e[a+1])==null?void 0:o.type)==="unknown")return d("No se puede usar un token desconocido",((i=e[a-1])==null?void 0:i.type)==="unknown"?e[a-1].column:e[a+1].column,r);const E=s(e.slice(0,a)),g=s(e.slice(a+1));return{type:"logical_operation",operator:e[a].value,left:E,right:g}}for(let a=0;a<e.length;a++)if(e[a].type==="operator"&&oe.includes(e[a].value))return((p=e[a-1])==null?void 0:p.type)==="keyword"||((f=e[a+1])==null?void 0:f.type)==="keyword"?d("No se puede usar un keyword como operando",e[a+1]&&e[a+1].type==="keyword"?e[a+1].column:e[a].column,r):((m=e[a-1])==null?void 0:m.type)==="unknown"||((T=e[a+1])==null?void 0:T.type)==="unknown"?d("No se puede usar un token desconocido",((F=e[a-1])==null?void 0:F.type)==="unknown"?e[a-1].column:e[a+1].column,r):{type:"comparison_expression",operator:e[a].value,left:e[a-1],right:e[a+1]};for(let a=e.length-1;a>=0;a--)if(e[a].type==="operator"&&["*","/","%"].includes(e[a].value)){if(((V=e[a-1])==null?void 0:V.type)==="keyword"||((l=e[a+1])==null?void 0:l.type)==="keyword")return d("No se puede usar un keyword como operando",e[a+1]&&e[a+1].type==="keyword"?e[a+1].column:e[a].column,r);if(((c=e[a-1])==null?void 0:c.type)==="unknown"||((y=e[a+1])==null?void 0:y.type)==="unknown")return d("No se puede usar un token desconocido",((S=e[a-1])==null?void 0:S.type)==="unknown"?e[a-1].column:e[a+1].column,r);const E=s(e.slice(0,a)),g=s(e.slice(a+1));return{type:"binary_expression",operator:e[a].value,left:E,right:g}}for(let a=e.length-1;a>=0;a--)if(e[a].type==="operator"&&["+","-"].includes(e[a].value)){if(((v=e[a-1])==null?void 0:v.type)==="keyword"||(($=e[a+1])==null?void 0:$.type)==="keyword")return d("No se puede usar un keyword como operando",e[a+1]&&e[a+1].type==="keyword"?e[a+1].column:e[a].column,r);if(((h=e[a-1])==null?void 0:h.type)==="unknown"||((j=e[a+1])==null?void 0:j.type)==="unknown")return d("No se puede usar un token desconocido",((w=e[a-1])==null?void 0:w.type)==="unknown"?e[a-1].column:e[a+1].column,r);const E=s(e.slice(0,a)),g=s(e.slice(a+1));return{type:"binary_expression",operator:e[a].value,left:E,right:g}}if(e.length===1&&J(e[0]))return e[0];if(e.length===1&&e[0].type==="unknown")return d("No se puede usar un token desconocido",e[0].column,r);if(e.some(a=>a.type==="keyword")){const a=e.find(E=>E.type==="keyword");return d("No se puede usar un keyword como operando",a?a.column:0,r)}return d("Expresión inválida",((I=e[0])==null?void 0:I.column)??0,r)}function M(e){return!e||typeof e!="object"?!1:e.type==="binary_expression"||e.type==="logical_operation"||e.type==="comparison_expression"}function B(e,r,s){var t,o,i,p,f,m,T,F,V;const u=[];let n=r;for(;n<s;){const l=e[n];if(!l||l.length===0){n++;continue}if(l[0].type==="keyword"&&l[0].value==="print"){if(l.length<2)return d("Falta argumento en print",l[0].column,n+1);const c=O(l.slice(1),n+1);if(_(c))return c;u.push({type:"print_statement",argument:c}),n++;continue}if(l[0].type==="keyword"&&(l[0].value==="let"||l[0].value==="const")){if(l.length===2){if(l[1].type!=="identifier")return d(`La variable${l[0].value==="const"?" constante":""} no tiene nombre`,((t=l[1])==null?void 0:t.column)??l[0].column,n+1);if(l[0].value==="const")return d("La variable constante no tiene valor",l[1].column,n+1);u.push({type:"new_variable_declaration",variable:l[1]}),n++;continue}if(l.length>=4&&l[2].type==="operator"&&l[2].value==="="){if(l[1].type!=="identifier")return d(`La variable${l[0].value==="const"?" constante":""} no tiene nombre`,((o=l[1])==null?void 0:o.column)??l[0].column,n+1);if(l[2].type!=="operator"||l[2].value!=="=")return d(`Falta el signo igual en variables${l[0].value==="const"?" constantes":""}`,((i=l[2])==null?void 0:i.column)??l[1].column,n+1);const c=l.slice(3);if(c.length===0)return d(`Falta el valor de la variable${l[0].value==="const"?" constante":""}`,l[2].column,n+1);const y=O(c,n+1);if(_(y))return y;l[0].value==="const"?u.push({type:"constant_variable_declaration",variable:l[1],value:y}):u.push({type:"new_variable_declaration_assignment",variable:l[1],value:y}),n++;continue}return l.length===3?l[1].type!=="identifier"?d(`La variable${l[0].value==="const"?" constante":""} no tiene nombre`,((p=l[1])==null?void 0:p.column)??l[0].column,n+1):l[2].type==="operator"&&l[2].value==="="?d(`Falta el valor de la variable${l[0].value==="const"?" constante":""}`,l[2].column,n+1):d(`Falta el signo igual en variables${l[0].value==="const"?" constantes":""}`,((f=l[2])==null?void 0:f.column)??l[1].column,n+1):l.length===1?d(`La variable${l[0].value==="const"?" constante":""} no tiene nombre`,l[0].column,n+1):d("Sintaxis inválida en declaración de variable",l[0].column,n+1)}if(l.length>=3&&l[0].type==="identifier"&&l[1].type==="operator"&&l[1].value==="="){const c=l.slice(2);if(c.length===0)return d("Falta valor en la asignación",l[1].column,n+1);const y=O(c,n+1);if(_(y))return y;u.push({type:"assignment",variable:l[0],value:y}),n++;continue}if(l[0].type==="keyword"&&l[0].value==="if"){let c=l.slice(1);c.length>0&&c[c.length-1].type==="punctuation"&&c[c.length-1].value===":"&&(c=c.slice(0,-1));const y=O(c,n+1);if(_(y))return y;if(!M(y)&&y.type!=="identifier"&&y.type!=="number"&&y.type!=="boolean"&&y.type!=="string")return d("Expresión inválida",((m=l[0])==null?void 0:m.column)??0,n+1);const S=n+1;let v=S;for(;v<s&&!G(e[v])&&!A(e[v])&&!H(e[v])&&!D(e[v]);)v++;const $=B(e,S,v);if(_($))return $;let h=v;const j={type:"if_statement",condition:y,body:$};let w=j,I;for(;h<s&&A(e[h]);){const a=e[h];if(a.length>1&&a[1].type==="keyword"&&a[1].value==="if"){let g=a.slice(2);g.length>0&&g[g.length-1].type==="punctuation"&&g[g.length-1].value===":"&&(g=g.slice(0,-1));const N=O(g,h+1);if(_(N))return N;if(!M(N)&&N.type!=="identifier"&&N.type!=="number"&&N.type!=="boolean"&&N.type!=="string")return d("Expresión inválida",((T=a[0])==null?void 0:T.column)??0,h+1);const W=h+1;let x=W;for(;x<s&&!G(e[x])&&!A(e[x])&&!H(e[x])&&!D(e[x]);)x++;const R=B(e,W,x);if(_(R))return R;const Z={type:"if_statement",condition:N,body:R};w.elseIf=Z,w=Z,h=x}else{const E=h+1;let g=E;for(;g<s&&!G(e[g])&&!A(e[g])&&!H(e[g])&&!D(e[g]);)g++;I=B(e,E,g),h=g;break}}I&&(j.elseBody=I),u.push(j),n=h;continue}if(l[0].type==="keyword"&&l[0].value==="while"){let c=l.slice(1);c.length>0&&c[c.length-1].type==="punctuation"&&c[c.length-1].value===":"&&(c=c.slice(0,-1));const y=O(c,n+1);if(_(y))return y;if(!M(y)&&y.type!=="identifier"&&y.type!=="number"&&y.type!=="boolean"&&y.type!=="string")return d("Expresión inválida",((F=l[0])==null?void 0:F.column)??0,n+1);const S=n+1;let v=S;for(;v<s&&!G(e[v])&&!A(e[v])&&!H(e[v])&&!D(e[v]);)v++;const $=B(e,S,v);if(_($))return $;u.push({type:"while_statement",condition:y,body:$}),n=v;continue}if(l[0].type==="keyword"&&l[0].value==="for"){let c=1;const y=l[c];if(c++,l[c].type!=="operator"||l[c].value!=="=")return d("Sintaxis de for inválida",l[c].column,n+1);c++;const S=l[c];if(c++,l[c].type!=="keyword"||l[c].value!=="to")return d("Sintaxis de for inválida",l[c].column,n+1);c++;const v=l[c];c++;let $;l[c]&&l[c].type==="keyword"&&l[c].value==="step"&&(c++,$=l[c],c++),l[c]&&l[c].type==="punctuation"&&l[c].value;const h=l[0].column,j=n+1;let w=j;for(;w<s&&e[w]&&e[w].length>0&&e[w][0].column>h;)w++;const I=B(e,j,w);if(_(I))return I;u.push({type:"for_statement",iterator:{type:"new_variable_declaration",variable:y},init:S,end:v,...$?{step:$}:{},body:I}),n=w;continue}if(l.some(c=>c.type==="operator")){const c=O(l,n+1);if(_(c))return c;if(M(c))u.push(c);else return d("Expresión inválida",((V=l[0])==null?void 0:V.column)??0,n+1);n++;continue}n++}return u}function A(e){return!!e&&e.length>0&&e[0].type==="keyword"&&e[0].value==="else"}function G(e){return!!e&&e.length>0&&e[0].type==="keyword"&&e[0].value==="if"}function H(e){return!!e&&e.length>0&&e[0].type==="keyword"&&e[0].value==="for"}function D(e){return!!e&&e.length>0&&e[0].type==="keyword"&&e[0].value==="while"}function ie(e){return B(e,0,e.length)}function b(e,r,s){if(!e||typeof e!="object"||!("type"in e))return"unknown";const u=e;if(u.type==="identifier"){const n=e,t=r[n.value];return t?t.type==="unknown"&&s?(t.type=s,s):t.type:{type:"SemanticError",message:`Variable '${n.value}' no declarada`,column:n.column,line:1}}if(u.type==="number")return"number";if(u.type==="string")return"string";if(u.type==="boolean")return"boolean";if(u.type==="binary_expression"){const n=e;let t=b(n.left,r);if(typeof t=="object")return t;let o=b(n.right,r);if(typeof o=="object")return o;if(n.operator==="+"){if(t==="string"&&o==="number"||t==="number"&&o==="string"||t==="string"&&o==="string")return"string";if(t==="number"&&o==="number")return"number"}return t==="unknown"&&(o==="number"||o==="string")&&(t=b(n.left,r,o),typeof t=="object")?t:o==="unknown"&&(t==="number"||t==="string")&&(o=b(n.right,r,t),typeof o=="object")?o:t!==o?{type:"SemanticError",message:`No se puede operar entre tipos '${t}' y '${o}'`,column:n.right.column,line:1}:t==="string"&&n.operator!=="+"?{type:"SemanticError",message:"No se puede operar entre tipos 'string' y 'string' con el operador '-'",column:n.right.column,line:1}:t}if(u.type==="comparison_expression"){const n=e;let t=b(n.left,r);if(t==="unknown")return{type:"SemanticError",message:`Variable '${n.left.value}' no declarada`,column:n.left.column,line:1};if(typeof t=="object")return t;let o=b(n.right,r);return o==="unknown"?{type:"SemanticError",message:`Variable '${n.right.value}' no declarada`,column:n.right.column,line:1}:typeof o=="object"?o:t==="unknown"&&(o==="number"||o==="string"||o==="boolean")&&(t=b(n.left,r,o),typeof t=="object")?t:o==="unknown"&&(t==="number"||t==="string"||t==="boolean")&&(o=b(n.right,r,t),typeof o=="object")?o:t!==o?{type:"SemanticError",message:`No se puede comparar '${t}' con '${o}'`,column:n.right.column,line:1}:"boolean"}if(u.type==="logical_operation"){const n=e;if(n.operator==="!"){const t=b(n.left,r,"boolean");return typeof t=="object"?t:t!=="boolean"?{type:"SemanticError",message:`No se puede operar entre tipos '${t}' y 'boolean'`,column:n.left.column,line:1}:"boolean"}else{const t=b(n.left,r,"boolean");if(typeof t=="object")return t;const o=b(n.right,r,"boolean");return typeof o=="object"?o:t!=="boolean"||o!=="boolean"?{type:"SemanticError",message:`No se puede operar entre tipos '${t}' y '${o}'`,column:n.right.column,line:1}:"boolean"}}return"unknown"}function K(e){if(!e||typeof e!="object"||!("type"in e))return 0;const r=e;return r.type==="comparison_expression"||r.type==="logical_operation"?"left"in r&&r.left&&typeof r.left=="object"&&"column"in r.left?r.left.column:"right"in r&&r.right&&typeof r.right=="object"&&"column"in r.right?r.right.column:0:"column"in r?r.column:0}function L(e,r,s=1){const u={...r||{}};for(let n=0;n<e.length;n++){const t=e[n],o=s+n;if(t.type==="assignment"&&!u[t.variable.value])return{type:"SemanticError",message:`Variable '${t.variable.value}' no declarada`,column:t.variable.column,line:o};if(t.type==="new_variable_declaration"){const i=t.variable.value;if(u[i]&&!u[i].constant)return{type:"SemanticError",message:`Variable '${i}' redeclarada`,column:t.variable.column,line:o};u[i]||(u[i]={type:"unknown"})}else if(t.type==="constant_variable_declaration"){const i=t.variable.value;if(u[i]&&u[i].constant)return{type:"SemanticError",message:`Variable '${i}' redeclarada`,column:t.variable.column,line:o};u[i]||(u[i]={type:b(t.value,u),constant:!0})}else(t.type==="assignment"||t.type==="new_variable_declaration_assignment")&&!u[t.variable.value]&&(u[t.variable.value]={type:"unknown"})}for(let n=0;n<e.length;n++){const t=e[n],o=s+n;if(t.type==="new_variable_declaration"){const i=t.variable.value;if(u[i]&&u[i].type!=="unknown")return{type:"SemanticError",message:`Variable '${i}' redeclarada`,column:t.variable.column,line:o};u[i]={type:"unknown"}}else if(t.type==="assignment"||t.type==="new_variable_declaration_assignment"){const i=t.variable.value;if(u[i].constant)return{type:"SemanticError",message:"No se puede reasignar una constante",column:t.variable.column,line:o};if(!u[i])return{type:"SemanticError",message:`Variable '${i}' no declarada`,column:t.variable.column,line:o};if(u[i].forIterator)return{type:"SemanticError",message:"No se puede reasignar el iterador del for",column:t.variable.column,line:o};const p=b(t.value,u);if(typeof p=="object")return p.line=o,p;u[i].type,u[i].type=p}else if(t.type==="binary_expression"){const i=b(t,u);if(typeof i=="object")return i.line=o,i}else if(t.type==="comparison_expression"){const i=b(t,u);if(typeof i=="object")return i.line=o,i}else if(t.type==="logical_operation"){const i=b(t,u);if(typeof i=="object")return i.line=o,i}else if(t.type==="print_statement"){const i=t.argument;if(i.type==="identifier"){const p=i;if(!u[p.value])return{type:"SemanticError",message:`Variable '${p.value}' no declarada`,column:p.column,line:o}}else if(i.type==="binary_expression"||i.type==="comparison_expression"||i.type==="logical_operation"){const p=b(i,u);if(typeof p=="object")return p.line=o,p}}else if(t.type==="if_statement"){const i=b(t.condition,u);if(typeof i=="object")return i.line=o,i;if(i!=="boolean")return{type:"SemanticError",message:"La condición de if debe ser booleana",column:K(t.condition),line:o};const p=L(t.body,u,o+1);if(p!==!0)return p;if(t.elseBody){const f=L(t.elseBody,u,o+1);if(f!==!0)return f}if(t.elseIf){const f=L([t.elseIf],u,o+1);if(f!==!0)return f}}else if(t.type==="while_statement"){if(t.condition&&typeof t.condition=="object"&&"type"in t.condition&&t.condition.type==="comparison_expression"){const f=b(t.condition,u);if(typeof f=="object")return f.line=o,f}if(t.condition&&typeof t.condition=="object"&&"type"in t.condition&&t.condition.type==="identifier"){const f=b(t.condition,u,"boolean");if(typeof f=="object")return f.line=o,f}const i=b(t.condition,u);if(typeof i=="object")return i.line=o,i;if(i!=="boolean")return{type:"SemanticError",message:"La condición de while debe ser booleana",column:K(t.condition),line:o};const p=L(t.body,u,o+1);if(p!==!0)return p}else if(t.type==="for_statement"){const i=t.iterator.variable.value;if(u[i])return{type:"SemanticError",message:`Variable '${i}' ya declarada anteriormente`,column:t.iterator.variable.column,line:o};if(t.step&&t.step.type!=="number")return{type:"SemanticError",message:"El step del for debe ser un número",column:t.step.column,line:o};if(b(t.init,u)!=="number"||b(t.end,u)!=="number"||t.step&&b(t.step,u)!=="number")return{type:"SemanticError",message:"El inicio, fin y step del for deben ser numéricos",column:t.init.column,line:o};const p={...u};p[i]={type:"number",forIterator:!0};const f=L(t.body,p,o+1);if(f!==!0)return f}}return!0}const ae=e=>L(e);function C(e){const r=[];let s=0;function u(){return s++,`t${s}`}function n(t){if(!t||typeof t!="object"||!("type"in t))return"";switch(t.type){case"number":case"string":case"boolean":case"identifier":return t.value;case"binary_expression":{const i=t,p=n(i.left),f=n(i.right),m=u();return r.push(`${m} = ${p} ${i.operator} ${f}`),m}case"comparison_expression":{const i=t,p=n(i.left),f=n(i.right),m=u();return r.push(`${m} = ${p} ${i.operator} ${f}`),m}case"logical_operation":{const i=t;if(i.operator==="!"){const p=n(i.left),f=u();return r.push(`${f} = !${p}`),f}else{const p=n(i.left),f=n(i.right),m=u();return r.push(`${m} = ${p} ${i.operator} ${f}`),m}}default:return""}}for(const t of e)switch(t.type){case"new_variable_declaration":r.push(`DECL ${t.variable.value}`);break;case"new_variable_declaration_assignment":{r.push(`DECL ${t.variable.value}`);const o=n(t.value);r.push(`SET ${t.variable.value} = ${o}`);break}case"constant_variable_declaration":{const o=n(t.value);r.push(`CONST ${t.variable.value} = ${o}`);break}case"assignment":{const o=n(t.value);r.push(`SET ${t.variable.value} = ${o}`);break}case"print_statement":{const o=n(t.argument);r.push(`PRINT ${o}`);break}case"binary_expression":case"comparison_expression":case"logical_operation":{n(t);break}case"if_statement":{const o=n(t.condition),i=`L${r.length}_ELSE`,p=`L${r.length}_END`;r.push(`IF_FALSE ${o} GOTO ${i}`);const f=C(t.body);if(r.push(...f),t.elseIf){r.push(`GOTO ${p}`),r.push(`${i}:`);const m=C([t.elseIf]);r.push(...m),r.push(`${p}:`)}else if(t.elseBody){r.push(`GOTO ${p}`),r.push(`${i}:`);const m=C(t.elseBody);r.push(...m),r.push(`${p}:`)}else r.push(`${i}:`);break}case"while_statement":{const o=`L${r.length}_WHILE`,i=`L${r.length}_END`;r.push(`${o}:`);const p=n(t.condition);r.push(`IF_FALSE ${p} GOTO ${i}`);const f=C(t.body);r.push(...f),r.push(`GOTO ${o}`),r.push(`${i}:`);break}case"for_statement":{const o=`L${r.length}_FOR`,i=`L${r.length}_END`;r.push(`DECL ${t.iterator.variable.value}`);const p=n(t.init);r.push(`SET ${t.iterator.variable.value} = ${p}`),r.push(`${o}:`);const f=n(t.end);r.push(`IF_FALSE ${t.iterator.variable.value} > ${f} GOTO ${i}`);const m=C(t.body);if(r.push(...m),t.step){const T=n(t.step);r.push(`SET ${t.iterator.variable.value} = ${t.iterator.variable.value} + ${T}`)}else r.push(`SET ${t.iterator.variable.value} = ${t.iterator.variable.value} + 1`);r.push(`GOTO ${o}`),r.push(`${i}:`);break}default:r.push("// No implementado")}return r}const P=document.getElementById("error-box"),z=document.getElementById("error-container"),Q=e=>{if(!z||!P)return;z.classList.add("error-active");const r=document.createElement("div");r.className="error",r.innerHTML=`
    <strong>${e.type}</strong>: ${e.message} <br>
    <strong>Línea:</strong> ${e.line} <strong>Columna:</strong> ${e.column}
  `,P.appendChild(r)},U=()=>{!z||!P||(z.classList.remove("error-active"),P.innerHTML="")},X=document.getElementById("output-lexico"),Y=document.getElementById("output-sintactico"),le=document.getElementById("output-codigo"),ue=e=>{X.innerHTML="",Y.innerHTML="",U();const r=[];for(const s of e){const u=ne(s);r.push(u)}console.log("Tokens Generados:",r),X.innerHTML=`
    <table  border="1" cellpadding="4" cellspacing="0" class="glass-table">
      <thead>
        <tr>
          <th>Línea</th>
          <th>Columna</th>
          <th>Tipo</th>
          <th>Valor</th>
        </tr>
      </thead>
      <tbody>
        ${r.map((s,u)=>s.map(n=>`<tr>
                      <td>${u+1}</td>
                      <td>${n.column}</td>
                      <td>${n.type}</td>
                      <td>${n.value}</td>
                    </tr>`).join("")).join("")}
      </tbody>
    </table>
  `;try{const s=ie(r);if("message"in s&&"line"in s&&"column"in s)throw s;const u=i=>JSON.stringify(i,null,2).replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?)/g,f=>{let m="json-value";return/:$/.test(f)?m="json-key":/^"/.test(f)?m="json-string":/true|false/.test(f)?m="json-boolean":/null/.test(f)?m="json-null":isNaN(parseFloat(f))||(m="json-number"),`<span class="${m}">${f}</span>`});Y.innerHTML=`<pre>${u(s)}</pre>`;const n=ae(s);if(typeof n=="object"&&n!==null&&"message"in n&&"line"in n&&"column"in n)throw n;const t=C(s);console.log("Código Intermedio Generado:",t);const o=`
        <table  border="1" cellpadding="4" cellspacing="0" class="glass-table">
        <thead>
          <tr>
            <th>No.</th>
            <th>Statement</th>
        </tr>
        </thead>
      <tbody>
    ${t.map((i,p)=>`
            <tr>
                <td>${p+1}</td>
                <td>${i}</td>
              
            </tr>
          `).join("")}
      </tbody>
      </table>
    `;le.innerHTML=o}catch(s){typeof s=="object"&&s!==null&&"message"in s&&"line"in s&&"column"in s?Q(s):Q({message:"Error desconocido durante la compilación",line:0,column:0})}},k=document.getElementById("editor"),ce=document.getElementById("compile-btn"),se=document.getElementById("file-upload");se.addEventListener("change",async e=>{const r=await ee(e.target.files);r&&(k.value=r)});ce.addEventListener("click",()=>{const e=k.value,r=te(e);ue(r)});U();
